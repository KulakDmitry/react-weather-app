{"ast":null,"code":"var _jsxFileName = \"/Users/Admin/Dev/WebstormProjects/react-weather-app/src/App.js\";\nimport \"./App.css\";\nimport React, { Component } from \"react\";\nimport SearchPanel from \"./components/SearchPanel\";\nimport Info from \"./components/Info\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.searchingCity = e => {\n      this.setState({\n        value: e.target.value\n      });\n    };\n\n    this.url = \"https://api.openweathermap.org/data/2.5/\";\n    this.key = \"33178d46dea4c98a92d98aa6ea4ebc24\";\n\n    this.getData = () => {\n      fetch(`${this.url}weather?q=${this.state.value}&appid=${this.key}&units=metric`).then(response => response.json()).then(response => this.setState({\n        weather: response,\n        isLoading: false\n      }));\n    };\n\n    this.startSearch = e => {\n      if (e.key !== \"Enter\") {\n        return;\n      }\n\n      this.setState({\n        isLoading: true,\n        weather: null\n      }, this.getData);\n    };\n\n    this.clearInput = () => {\n      this.setState({\n        value: \"\",\n        exist: false\n      });\n    };\n\n    this.state = {\n      value: \"\",\n      weather: null,\n      isLoading: false,\n      exist: true\n    };\n  }\n\n  render() {\n    const {\n      weather,\n      value,\n      isLoading,\n      exist\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Weather today\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchPanel, {\n        isLoading: isLoading,\n        value: value,\n        searchingCity: this.searchingCity,\n        startSearch: this.startSearch,\n        clearInput: this.clearInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), weather ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"display\",\n        children: weather.name !== value && (exist ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Not Exist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 24\n        }, this) : /*#__PURE__*/_jsxDEV(Info, {\n          weather: weather\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 43\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Admin/Dev/WebstormProjects/react-weather-app/src/App.js"],"names":["React","Component","SearchPanel","Info","App","constructor","props","searchingCity","e","setState","value","target","url","key","getData","fetch","state","then","response","json","weather","isLoading","startSearch","clearInput","exist","render","name"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAC1BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAWnBC,aAXmB,GAWFC,CAAD,IAAO;AACrB,WAAKC,QAAL,CAAc;AACZC,QAAAA,KAAK,EAAEF,CAAC,CAACG,MAAF,CAASD;AADJ,OAAd;AAGD,KAfkB;;AAAA,SAiBnBE,GAjBmB,GAiBb,0CAjBa;AAAA,SAmBnBC,GAnBmB,GAmBb,kCAnBa;;AAAA,SAqBnBC,OArBmB,GAqBT,MAAM;AACdC,MAAAA,KAAK,CACF,GAAE,KAAKH,GAAI,aAAY,KAAKI,KAAL,CAAWN,KAAM,UAAS,KAAKG,GAAI,eADxD,CAAL,CAGGI,IAHH,CAGSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAHtB,EAIGF,IAJH,CAISC,QAAD,IACJ,KAAKT,QAAL,CAAc;AACZW,QAAAA,OAAO,EAAEF,QADG;AAEZG,QAAAA,SAAS,EAAE;AAFC,OAAd,CALJ;AAUD,KAhCkB;;AAAA,SAkCnBC,WAlCmB,GAkCJd,CAAD,IAAO;AACnB,UAAIA,CAAC,CAACK,GAAF,KAAU,OAAd,EAAuB;AACrB;AACD;;AACD,WAAKJ,QAAL,CACE;AACEY,QAAAA,SAAS,EAAE,IADb;AAEED,QAAAA,OAAO,EAAE;AAFX,OADF,EAKE,KAAKN,OALP;AAOD,KA7CkB;;AAAA,SA+CnBS,UA/CmB,GA+CN,MAAM;AACjB,WAAKd,QAAL,CAAc;AACZC,QAAAA,KAAK,EAAE,EADK;AAEZc,QAAAA,KAAK,EAAE;AAFK,OAAd;AAID,KApDkB;;AAGjB,SAAKR,KAAL,GAAa;AACXN,MAAAA,KAAK,EAAE,EADI;AAEXU,MAAAA,OAAO,EAAE,IAFE;AAGXC,MAAAA,SAAS,EAAE,KAHA;AAIXG,MAAAA,KAAK,EAAE;AAJI,KAAb;AAMD;;AA6CDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEL,MAAAA,OAAF;AAAWV,MAAAA,KAAX;AAAkBW,MAAAA,SAAlB;AAA6BG,MAAAA;AAA7B,QAAuC,KAAKR,KAAlD;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,WAAD;AACE,QAAA,SAAS,EAAEK,SADb;AAEE,QAAA,KAAK,EAAEX,KAFT;AAGE,QAAA,aAAa,EAAE,KAAKH,aAHtB;AAIE,QAAA,WAAW,EAAE,KAAKe,WAJpB;AAKE,QAAA,UAAU,EAAE,KAAKC;AALnB;AAAA;AAAA;AAAA;AAAA,cAJF,EAWGH,OAAO,gBACN;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,kBACGA,OAAO,CAACM,IAAR,KAAiBhB,KAAjB,KACEc,KAAK,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAH,gBAAsB,QAAC,IAAD;AAAM,UAAA,OAAO,EAAEJ;AAAf;AAAA;AAAA;AAAA;AAAA,gBAD7B;AADH;AAAA;AAAA;AAAA;AAAA,cADM,GAKJ,IAhBN;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAoBD;;AA7EyB;;AAgF5B,eAAehB,GAAf","sourcesContent":["import \"./App.css\";\nimport React, { Component } from \"react\";\nimport SearchPanel from \"./components/SearchPanel\";\nimport Info from \"./components/Info\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: \"\",\n      weather: null,\n      isLoading: false,\n      exist: true,\n    };\n  }\n\n  searchingCity = (e) => {\n    this.setState({\n      value: e.target.value,\n    });\n  };\n\n  url = \"https://api.openweathermap.org/data/2.5/\";\n\n  key = \"33178d46dea4c98a92d98aa6ea4ebc24\";\n\n  getData = () => {\n    fetch(\n      `${this.url}weather?q=${this.state.value}&appid=${this.key}&units=metric`\n    )\n      .then((response) => response.json())\n      .then((response) =>\n        this.setState({\n          weather: response,\n          isLoading: false,\n        })\n      );\n  };\n\n  startSearch = (e) => {\n    if (e.key !== \"Enter\") {\n      return;\n    }\n    this.setState(\n      {\n        isLoading: true,\n        weather: null,\n      },\n      this.getData\n    );\n  };\n\n  clearInput = () => {\n    this.setState({\n      value: \"\",\n      exist: false,\n    });\n  };\n\n  render() {\n    const { weather, value, isLoading, exist } = this.state;\n    return (\n      <div className=\"App\">\n        <header>\n          <h1>Weather today</h1>\n        </header>\n        <SearchPanel\n          isLoading={isLoading}\n          value={value}\n          searchingCity={this.searchingCity}\n          startSearch={this.startSearch}\n          clearInput={this.clearInput}\n        />\n        {weather ? (\n          <div className=\"display\">\n            {weather.name !== value &&\n              (exist ? <p>Not Exist</p> : <Info weather={weather} />)}\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}