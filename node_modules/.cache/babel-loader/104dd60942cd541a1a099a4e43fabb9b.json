{"ast":null,"code":"var _jsxFileName = \"/Users/Admin/Dev/WebstormProjects/react-weather-app/src/App.js\";\nimport \"./App.css\";\nimport React, { Component } from \"react\";\nimport { DateTime } from \"luxon\";\nimport Loader from \"./components/Loader/Loader\";\nimport SearchPanel from \"./components/SearchPanel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.searchingCity = e => {\n      this.setState({\n        value: e.target.value\n      });\n    };\n\n    this.url = \"https://api.openweathermap.org/data/2.5/\";\n    this.key = \"33178d46dea4c98a92d98aa6ea4ebc24\";\n\n    this.getData = () => {\n      fetch(`${this.url}weather?q=${this.state.value}&appid=${this.key}&units=metric`).then(response => response.json()).then(response => this.setState({\n        weather: response,\n        isLoading: false\n      }));\n    };\n\n    this.startSearch = e => {\n      if (e.key !== \"Enter\") {\n        return;\n      }\n\n      this.setState({\n        isLoading: true,\n        weather: null\n      }, this.getData);\n    };\n\n    this.clearInput = () => {\n      this.setState({\n        value: \"\"\n      });\n    };\n\n    this.state = {\n      value: \"\",\n      weather: null,\n      isLoading: false\n    };\n  }\n\n  render() {\n    const {\n      weather,\n      value,\n      isLoading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Weather today\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchPanel, {\n        isLoading: isLoading,\n        value: value,\n        searchingCity: this.searchingCity,\n        startSearch: this.startSearch,\n        clearInput: this.clearInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), weather && weather.name !== value ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"display\",\n        children: [\"(\", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Not exist city\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 14\n        }, this), \") : (\", /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"city\",\n            children: [weather.name, \", \", weather.sys.country]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date\",\n            children: DateTime.fromSeconds(weather.dt).toLocaleString(DateTime.DATE_HUGE)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"temp\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Temperature now:\", Math.round(weather.main.temp), \"\\xB0C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Max today: \", Math.round(weather.main.temp_max), \"\\xB0C \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 68\n              }, this), \"Min today: \", Math.round(weather.main.temp_min), \"\\xB0C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"description\",\n            children: weather.weather[0].main\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), \")}\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Admin/Dev/WebstormProjects/react-weather-app/src/App.js"],"names":["React","Component","DateTime","Loader","SearchPanel","App","constructor","props","searchingCity","e","setState","value","target","url","key","getData","fetch","state","then","response","json","weather","isLoading","startSearch","clearInput","render","name","sys","country","fromSeconds","dt","toLocaleString","DATE_HUGE","Math","round","main","temp","temp_max","temp_min"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport React, { Component } from \"react\";\nimport { DateTime } from \"luxon\";\nimport Loader from \"./components/Loader/Loader\";\nimport SearchPanel from \"./components/SearchPanel\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: \"\",\n      weather: null,\n      isLoading: false,\n    };\n  }\n\n  searchingCity = (e) => {\n    this.setState({\n      value: e.target.value,\n    });\n  };\n\n  url = \"https://api.openweathermap.org/data/2.5/\";\n\n  key = \"33178d46dea4c98a92d98aa6ea4ebc24\";\n\n  getData = () => {\n    fetch(\n      `${this.url}weather?q=${this.state.value}&appid=${this.key}&units=metric`\n    )\n      .then((response) => response.json())\n      .then((response) =>\n        this.setState({\n          weather: response,\n          isLoading: false,\n        })\n      );\n  };\n\n  startSearch = (e) => {\n    if (e.key !== \"Enter\") {\n      return;\n    }\n    this.setState({ isLoading: true, weather: null }, this.getData);\n  };\n\n  clearInput = () => {\n    this.setState({\n      value: \"\",\n    });\n  };\n\n  render() {\n    const { weather, value, isLoading } = this.state;\n    return (\n      <div className=\"App\">\n        <header>\n          <h1>Weather today</h1>\n        </header>\n        <SearchPanel\n          isLoading={isLoading}\n          value={value}\n          searchingCity={this.searchingCity}\n          startSearch={this.startSearch}\n          clearInput={this.clearInput}\n        />\n        {weather && weather.name !== value ? (\n          <div className=\"display\">\n            (<p>Not exist city</p>) : (\n            <div>\n              <div className=\"city\">\n                {weather.name}, {weather.sys.country}\n              </div>\n              <div className=\"date\">\n                {DateTime.fromSeconds(weather.dt).toLocaleString(\n                  DateTime.DATE_HUGE\n                )}\n              </div>\n              <div className=\"temp\">\n                <p>Temperature now:{Math.round(weather.main.temp)}°C</p>\n                <p>\n                  Max today: {Math.round(weather.main.temp_max)}°C <br />\n                  Min today: {Math.round(weather.main.temp_min)}°C\n                </p>\n              </div>\n              <div className=\"description\">{weather.weather[0].main}</div>\n            </div>\n            )}\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}