{"ast":null,"code":"var _jsxFileName = \"/Users/Admin/Dev/WebstormProjects/react-weather-app/src/App.js\";\nimport \"./App.css\";\nimport React, { Component } from \"react\";\nimport SearchPanel from \"./components/SearchPanel\";\nimport Info from \"./components/Info\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.searchingCity = e => {\n      this.setState({\n        value: e.target.value,\n        className: \"\",\n        existMessage: \"\"\n      });\n    };\n\n    this.url = \"https://api.openweathermap.org/data/2.5/\";\n    this.key = \"33178d46dea4c98a92d98aa6ea4ebc24\";\n\n    this.getData = () => {\n      const {\n        weather,\n        value\n      } = this.state;\n      fetch(`${this.url}weather?q=${this.state.value}&appid=${this.key}&units=metric`).then(response => response.json()).then(response => this.setState({\n        weather: response,\n        isLoading: false\n      }));\n\n      if (weather !== value) {\n        this.setState({\n          existMessage: \"City Not Found\",\n          className: null\n        });\n      }\n    };\n\n    this.startSearch = e => {\n      if (e.key !== \"Enter\") {\n        return;\n      }\n\n      this.setState({\n        isLoading: true,\n        weather: null\n      }, this.getData);\n    };\n\n    this.clearInput = () => {\n      this.setState({\n        value: \"\",\n        existMessage: \"\",\n        className: \"\"\n      });\n    };\n\n    this.state = {\n      value: \"\",\n      weather: null,\n      isLoading: false,\n      existMassage: \"\",\n      className: \"\"\n    };\n  }\n\n  render() {\n    const {\n      weather,\n      value,\n      isLoading,\n      existMessage\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: weather && weather.name === value ? `App ${weather.weather[0].main} ` : \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Weather today\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchPanel, {\n        isLoading: isLoading,\n        value: value,\n        searchingCity: this.searchingCity,\n        startSearch: this.startSearch,\n        clearInput: this.clearInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), weather ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"display\",\n        children: weather.name !== value ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: existMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Info, {\n          weather: weather\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Admin/Dev/WebstormProjects/react-weather-app/src/App.js"],"names":["React","Component","SearchPanel","Info","App","constructor","props","searchingCity","e","setState","value","target","className","existMessage","url","key","getData","weather","state","fetch","then","response","json","isLoading","startSearch","clearInput","existMassage","render","name","main"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport React, { Component } from \"react\";\nimport SearchPanel from \"./components/SearchPanel\";\nimport Info from \"./components/Info\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: \"\",\n      weather: null,\n      isLoading: false,\n      existMassage: \"\",\n      className: \"\",\n    };\n  }\n\n  searchingCity = (e) => {\n    this.setState({\n      value: e.target.value,\n      className: \"\",\n      existMessage: \"\",\n    });\n  };\n\n  url = \"https://api.openweathermap.org/data/2.5/\";\n\n  key = \"33178d46dea4c98a92d98aa6ea4ebc24\";\n\n  getData = () => {\n    const { weather, value } = this.state;\n    fetch(\n      `${this.url}weather?q=${this.state.value}&appid=${this.key}&units=metric`\n    )\n      .then((response) => response.json())\n      .then((response) =>\n        this.setState({\n          weather: response,\n          isLoading: false,\n        })\n      );\n    if (weather !== value) {\n      this.setState({\n        existMessage: \"City Not Found\",\n        className: null,\n      });\n    }\n  };\n\n  startSearch = (e) => {\n    if (e.key !== \"Enter\") {\n      return;\n    }\n\n    this.setState({ isLoading: true, weather: null }, this.getData);\n  };\n\n  clearInput = () => {\n    this.setState({\n      value: \"\",\n      existMessage: \"\",\n      className: \"\",\n    });\n  };\n\n  render() {\n    const { weather, value, isLoading, existMessage } = this.state;\n    return (\n      <div\n        className={\n          weather && weather.name === value\n            ? `App ${weather.weather[0].main} `\n            : \"App\"\n        }\n      >\n        <header>\n          <h1>Weather today</h1>\n        </header>\n        <SearchPanel\n          isLoading={isLoading}\n          value={value}\n          searchingCity={this.searchingCity}\n          startSearch={this.startSearch}\n          clearInput={this.clearInput}\n        />\n        {weather ? (\n          <div className=\"display\">\n            {weather.name !== value ? (\n              <p>{existMessage}</p>\n            ) : (\n              <Info weather={weather} />\n            )}\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}